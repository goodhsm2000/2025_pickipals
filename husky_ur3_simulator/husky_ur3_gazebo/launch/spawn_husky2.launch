<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      gazebo_description.launch
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com
\copyright Copyright (c) 2015, Clearpath Robotics, Inc.
... (이하 라이선스 주석 생략)
-->
<launch>

  <arg name="multimaster" default="false"/>

  <arg name="robot_namespace" default="/"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <arg name="laser_enabled" default="$(optenv HUSKY_LMS1XX_ENABLED false)"/>

  <!-- 기존에는 default="$(optenv HUSKY_UR5_ENABLED false)" 였으나,
       카메라를 쓰지 않기 위해 'false'로 고정 -->
  <arg name="camera_h_enabled" default="false"/>

  <arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)"/>


  <group ns="$(arg robot_namespace)">

    <group if="$(arg multimaster)">
      <include file="$(find husky_ur3_gazebo)/launch/description.launch" >
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
        <arg name="laser_enabled" default="$(arg laser_enabled)"/>
        <arg name="camera_h_enabled" default="$(arg camera_h_enabled)"/>
        <arg name="urdf_extras" default="$(arg urdf_extras)"/>
      </include>
        
      <include file="$(find multimaster_launch)/launch/multimaster_gazebo_robot.launch">
        <arg name="gazebo_interface" value="$(find husky_ur3_gazebo)/config/gazebo_interface.yaml" />
        <arg name="robot_namespace" value="$(arg robot_namespace)"/>
      </include>

      <!-- For multimaster bringup, need to load the controller config -->
      <rosparam command="load" file="$(find husky_ur3_gazebo)/config/control.yaml" />
    </group>

    <!-- For single master bringup, run robot control on the gazebo master -->
    <!-- Note that husky_description/description.launch is already included in husky_control/control.launch. -->
    <group unless="$(arg multimaster)">
      <include file="$(find husky_ur3_gazebo)/launch/control.launch">
        <arg name="multimaster" value="$(arg multimaster)"/>
        <arg name="laser_enabled" value="$(arg laser_enabled)"/>
        <arg name="camera_h_enabled" value="$(arg camera_h_enabled)"/>
        <arg name="urdf_extras" value="$(arg urdf_extras)"/>
      </include>
    </group>


    <!-- 카메라 관련 그룹. camera_h_enabled=false 이면 아예 실행되지 않음 -->
    <group if="$(arg camera_h_enabled)">

      <!-- Include pointcloud_to_laserscan if simulated Kinect is attached -->
      <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">

          <remap from="cloud_in" to="camera/depth/points"/>
          <remap from="scan" to="scan"/>
          <rosparam>
              target_frame: base_link
              tolerance: 1.0
              min_height: 0.05
              max_height: 1.0

              angle_min: -0.52
              angle_max: 0.52
              angle_increment: 0.005
              scan_time: 0.3333
              range_min: 0.45
              range_max: 4.0
              use_inf: true
              concurrency_level: 1
          </rosparam>
      </node>

    </group>

    <!-- Spawn robot in gazebo -->
    <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model $(arg robot_namespace)" />

  </group>
  
</launch>
